{
      "snp - QTL - gene": {
            "general - relationship - specific": {
                  "question": [
                        "Which {SNP} serves as the lead {QTL} for {@gene_symbol@}?"
                  ],
                  "cyper_for_intermediate_page": "MATCH (variant:sequence_variant:snp)-[r:fine_mapped_eQTL]->(gene:coding_elements {id:'@gene@'}) WITH CASE WHEN r.data_source='GTEx; SusieR' THEN 'GTEx; SusieR' WHEN r.data_source='INSPIRE; SusieR' THEN 'INSPIRE; SusieR' WHEN r.data_source='splicing; GTEx' THEN 'splicing; GTEx' WHEN r.data_source='exon; INSPIRE' THEN 'exon; INSPIRE' ELSE 'Other' END AS data_source, r, variant WITH data_source, COLLECT({snp: id(variant), credible_set_id: r.credible_set, data_source: r.data_source, pip: r.pip, n_snp: r.n_snp, purity: r.purity, nominal_p: r.nominal_p, lbf: r.lbf, effect_allele: r.effect_allele}) AS credible_sets RETURN data_source, credible_sets ORDER BY data_source;",
                  "intermediate_page_table": [
                        {
                              "Credible set": "credible_set"
                        },
                        {
                              "Purity": "purity"
                        },
                        {
                              "Lead SNP": "snp"
                        },
                        {
                              "PIP": "pip"
                        },
                        {
                              "#": "n_snp"
                        }
                  ],
                  "inter_error_title": "No QTL data found",
                  "inter_error_message": "No QTL records were found for this gene in our PanKbase dataset.",
                  "result_error_title": "Invalid link format",
                  "result_error_message": "The link you're using may be outdated or incorrectly formatted. Please verify the URL or contact us using the button below for assistance.",
                  "question_for_result": "How does the {SNP @snp_id@} influence the expression of {@gene_symbol@} in @tissue@ tissue, as reported by @method@?",
                  "cypher_for_result_page_core": "MATCH (variant:sequence_variant:snp), (gene:coding_elements) WHERE ID(variant) = '@snp@' AND ID(gene) = '@gene@' MATCH (variant)-[r:fine_mapped_eQTL]-(gene) WITH collect(DISTINCT variant) + collect(DISTINCT gene) AS nodes, collect(DISTINCT r) AS edges RETURN { results: [ { nodes: nodes, edges: edges } ] } AS output;",
                  "cypher_for_result_page_nbr": "MATCH (variant:sequence_variant:snp) WHERE ID(variant) = '@snp@' MATCH (gene:coding_elements) WHERE ID(gene) = '@gene@' WITH variant, gene AS g OPTIONAL MATCH (variant)-[r0]-(nbr0) WITH variant, g, collect(DISTINCT {rel: r0, node: nbr0}) AS variant_related_pairs OPTIONAL MATCH (g)-[r1:effector_gene]-(nbr1) WITH variant, g, variant_related_pairs, collect(DISTINCT {rel: r1, node: nbr1}) AS effector_gene_pairs OPTIONAL MATCH (g)-[r2:regulation]->(nbr_g:gene) WITH variant, g, variant_related_pairs, effector_gene_pairs, collect(DISTINCT {rel: r2, node: nbr_g}) AS regulation_pairs_full OPTIONAL MATCH (g)-[r3:Differential_Expression]->(ct:cell_type) WITH variant, g, variant_related_pairs, effector_gene_pairs, regulation_pairs_full, collect(DISTINCT {rel: r3, node: ct}) AS differential_expression_pairs WITH variant, g, effector_gene_pairs, regulation_pairs_full[0..3] AS regulation_pairs_limited, variant_related_pairs, differential_expression_pairs WITH variant, g, variant_related_pairs + effector_gene_pairs + regulation_pairs_limited + differential_expression_pairs AS all_combined_pairs WITH variant, g, [pair IN all_combined_pairs WHERE pair.rel IS NOT NULL | pair.rel] AS all_rels, [pair IN all_combined_pairs WHERE pair.node IS NOT NULL | pair.node] AS all_nbrs WITH DISTINCT all_rels AS rels, [n IN all_nbrs WHERE ID(n) <> ID(g) AND ID(n) <> ID(variant)] AS nodes RETURN { results: [ { nodes: nodes, edges: rels } ] } AS output;",
                  "ai_question_for_result": [
                        "From the given JSON information, summarize the key characteristics and functions of the gene @gene_id@, including its involvement in immune regulation and associated pathways",
                        "Based on the JSON data, describe the relationship between the SNP @snp_id@ and the QTL of @gene_id@ in the pancreas, including details such as the effect allele, slope, posterior inclusion probability (PIP), and nominal p-value",
                        "Considering the input JSON, discuss the association between the gene @gene_id@ and Type 1 diabetes, including any evidence linking genetic variants to the disease"
                  ],
                  "ai_answer_sub_title": [
                        "Gene overview:",
                        "QTL overview:",
                        "Specific relation to Type 1 Diabetes:"
                  ],
                  "next_questions": [
                        {
                              "question": "Which {SNP} serves as the lead {QTL} for {@nbr_gene_symbol@}?",
                              "link": "/intermediate?sourceTerm=snp&relationship=QTL&targetTerm=gene@@nbr_gene_id@&targetSymbol=@nbr_gene_symbol@",
                              "query": "MATCH (variant:sequence_variant:snp)-[r:fine_mapped_eQTL]->(gene:coding_elements {id:'@nbr_gene_id@'}) WITH CASE WHEN r.data_source='GTEx; SusieR' THEN 'GTEx; SusieR' WHEN r.data_source='INSPIRE; SusieR' THEN 'INSPIRE; SusieR' WHEN r.data_source='splicing; GTEx' THEN 'splicing; GTEx' WHEN r.data_source='exon; INSPIRE' THEN 'exon; INSPIRE' ELSE 'Other' END AS data_source, r, variant WITH data_source, COLLECT({snp: id(variant), credible_set_id: r.credible_set, data_source: r.data_source, pip: r.pip, n_snp: r.n_snp, purity: r.purity, nominal_p: r.nominal_p, lbf: r.lbf, effect_allele: r.effect_allele}) AS credible_sets RETURN data_source, credible_sets ORDER BY data_source;"
                        }
                  ],
                  "resources_tabs": {
                        "references": {},
                        "empirical_evidence": {
                              "title": "Regional Fine-Mapping Plot",
                              "description": "This plot integrates multiple fine-mapping statistics (−log₁₀P, PIP, LBF) across a genomic region. The three-row scatter view condenses QTL evidence.\nRow 1 shows −log₁₀ P for classical association strength.\nRow 2 reports the posterior inclusion probability (PIP) from Bayesian fine-mapping.\nRow 3 displays the log Bayes factor (LBF) for complementary Bayes support.\nPoint colour encodes LD R² relative to the lead SNP (red dashed line), allowing you to gauge how neighbouring variants track the core signal.\nTogether these layers highlight candidate causal variants and their statistical weight at a glance.",
                              "legend": "View",
                              "lambda_function": "type_to_image",
                              "link_text": "Download the raw QTL data ↗"
                        },
                        "pankbase_links": [
                              [
                                    "QTL Data Source",
                                    "https://pankgraph.org/qtldatasource"
                              ],
                              [
                                    "QTL Pipeline",
                                    "https://pankgraph.org/pipeline"
                              ],
                              [
                                    "QTL Code",
                                    "https://github.com/PanKbase/PanKgraph-finemap-coloc"
                              ],
                              [
                                    "Integrated Cell Browser",
                                    "https://pankbase.org:8000/single-cell.html?PKBdatasetId=islet_of_Langerhans_scRNA_v1"
                              ]
                        ],
                        "external_links": [
                              [
                                    "Link to Ensembl: ",
                                    "View the gene @gene_symbol@ in Ensembl",
                                    "https://useast.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g=@gene_id@"
                              ]
                        ]
                  }
            },
            "specific - relationship - specific": {
                  "question": [
                        "Does {SNP @snp@} serve as a {QTL} for {@gene_symbol@}?"
                  ],
                  "intermediate_page_table": [
                        {
                              "Credible set": "credible_set"
                        },
                        {
                              "Gene": "gene_symbol"
                        },
                        {
                              "Lead SNP (PIP)": "lead_snp (lead_pip)"
                        },
                        {
                              "#": "n_snp"
                        },
                        {
                              "Searched SNP (PIP)": "snp (pip)"
                        }
                  ],
                  "cyper_for_intermediate_page": "SELECT * FROM QTL_DATA WHERE snp = '@snp@' AND gene = '@gene@'",
                  "inter_error_title": "No QTL data found",
                  "inter_error_message": "No QTL records were found for this gene/ snp in our PanKbase dataset.",
                  "result_error_title": "No QTL data found",
                  "result_error_message": "No QTL records were found for this gene/ snp in our PanKbase dataset.",
                  "question_for_result": "How does the {SNP @snp_id@} influence the expression of {@gene_symbol@} in @tissue@ tissue, as reported by @method@?",
                  "rdb_query_for_result_page": "SELECT * FROM QTL_DATA WHERE snp = '@snp@' AND credible_set = '@credible_set_id@'",
                  "cypher_for_result_page_core": "MATCH (variant:sequence_variant:snp), (gene:coding_elements) WHERE ID(variant) = '@lead_snp@' AND ID(gene) = '@gene@' MATCH (variant)-[r:fine_mapped_eQTL]-(gene) WITH collect(DISTINCT variant) + collect(DISTINCT gene) AS nodes, collect(DISTINCT r) AS edges RETURN { results: [ { nodes: nodes, edges: edges } ] } AS output;",
                  "cypher_for_result_page_nbr": "MATCH (variant:sequence_variant:snp) WHERE ID(variant) = '@lead_snp@' MATCH (gene:coding_elements) WHERE ID(gene) = '@gene@' WITH variant, gene AS g OPTIONAL MATCH (variant)-[r0]-(nbr0) WITH variant, g, collect(DISTINCT {rel: r0, node: nbr0}) AS variant_related_pairs OPTIONAL MATCH (g)-[r1:effector_gene]-(nbr1) WITH variant, g, variant_related_pairs, collect(DISTINCT {rel: r1, node: nbr1}) AS effector_gene_pairs OPTIONAL MATCH (g)-[r2:regulation]->(nbr_g:gene) WITH variant, g, variant_related_pairs, effector_gene_pairs, collect(DISTINCT {rel: r2, node: nbr_g}) AS regulation_pairs_full OPTIONAL MATCH (g)-[r3:Differential_Expression]->(ct:cell_type) WITH variant, g, variant_related_pairs, effector_gene_pairs, regulation_pairs_full, collect(DISTINCT {rel: r3, node: ct}) AS differential_expression_pairs WITH variant, g, effector_gene_pairs, regulation_pairs_full[0..3] AS regulation_pairs_limited, variant_related_pairs, differential_expression_pairs WITH variant, g, variant_related_pairs + effector_gene_pairs + regulation_pairs_limited + differential_expression_pairs AS all_combined_pairs WITH variant, g, [pair IN all_combined_pairs WHERE pair.rel IS NOT NULL | pair.rel] AS all_rels, [pair IN all_combined_pairs WHERE pair.node IS NOT NULL | pair.node] AS all_nbrs WITH DISTINCT all_rels AS rels, [n IN all_nbrs WHERE ID(n) <> ID(g) AND ID(n) <> ID(variant)] AS nodes RETURN { results: [ { nodes: nodes, edges: rels } ] } AS output;",
                  "ai_question_for_result": [
                        "From the given JSON information, summarize the key characteristics and functions of the gene @gene_id@, including its involvement in immune regulation and associated pathways",
                        "Based on the JSON data, describe the relationship between the SNP @snp_id@ and the QTL of @gene_id@ in the pancreas, including details such as the effect allele, slope, posterior inclusion probability (PIP), and nominal p-value. If there is lead snp != @snp@, please also include the relationship between the lead snp and the gene.",
                        "Considering the input JSON, discuss the association between the gene @gene_id@ and Type 1 diabetes, including any evidence linking genetic variants to the disease"
                  ],
                  "ai_answer_sub_title": [
                        "Gene overview:",
                        "QTL overview:",
                        "Specific relation to Type 1 Diabetes:"
                  ],
                  "next_questions": [
                        {
                              "question": "Which {SNP} serves as the lead {QTL} for {@nbr_gene_symbol@}?",
                              "link": "/intermediate?sourceTerm=snp&relationship=QTL&targetTerm=gene@@nbr_gene_id@&targetSymbol=@nbr_gene_symbol@",
                              "query": "MATCH (variant:sequence_variant:snp)-[r:fine_mapped_eQTL]->(gene:coding_elements {id:'@nbr_gene_id@'}) WITH CASE WHEN r.data_source='GTEx; SusieR' THEN 'GTEx; SusieR' WHEN r.data_source='INSPIRE; SusieR' THEN 'INSPIRE; SusieR' WHEN r.data_source='splicing; GTEx' THEN 'splicing; GTEx' WHEN r.data_source='exon; INSPIRE' THEN 'exon; INSPIRE' ELSE 'Other' END AS data_source, r, variant WITH data_source, COLLECT({snp: id(variant), credible_set_id: r.credible_set, data_source: r.data_source, pip: r.pip, n_snp: r.n_snp, purity: r.purity, nominal_p: r.nominal_p, lbf: r.lbf, effect_allele: r.effect_allele}) AS credible_sets RETURN data_source, credible_sets ORDER BY data_source;"
                        }
                  ],
                  "resources_tabs": {
                        "references": {},
                        "empirical_evidence": {
                              "title": "Regional Fine-Mapping Plot",
                              "description": "This plot integrates multiple fine-mapping statistics (−log₁₀P, PIP, LBF) across a genomic region. The three-row scatter view condenses QTL evidence.\nRow 1 shows −log₁₀ P for classical association strength.\nRow 2 reports the posterior inclusion probability (PIP) from Bayesian fine-mapping.\nRow 3 displays the log Bayes factor (LBF) for complementary Bayes support.\nPoint colour encodes LD R² relative to the lead SNP (red dashed line), allowing you to gauge how neighbouring variants track the core signal.\nTogether these layers highlight candidate causal variants and their statistical weight at a glance.",
                              "legend": "View",
                              "lambda_function": "type_to_image",
                              "link_text": "Download the raw QTL data ↗"
                        },
                        "pankbase_links": [
                              [
                                    "QTL Data Source",
                                    "https://pankgraph.org/qtldatasource"
                              ],
                              [
                                    "QTL Pipeline",
                                    "https://pankgraph.org/pipeline"
                              ],
                              [
                                    "QTL Code",
                                    "https://github.com/PanKbase/PanKgraph-finemap-coloc"
                              ],
                              [
                                    "Integrated Cell Browser",
                                    "https://pankbase.org:8000/single-cell.html?PKBdatasetId=islet_of_Langerhans_scRNA_v1"
                              ]
                        ],
                        "external_links": [
                              [
                                    "Link to Ensembl: ",
                                    "View the gene @gene_symbol@ in Ensembl",
                                    "https://useast.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g=@gene_id@"
                              ]
                        ]
                  }
            },
            "specific - relationship - general": {
                  "question": [
                        "Which {gene} is regulated by {SNP @snp@} as a {QTL}?"
                  ],
                  "intermediate_page_table": [
                        {
                              "Credible set": "credible_set"
                        },
                        {
                              "Gene": "gene_symbol"
                        },
                        {
                              "Lead SNP (PIP)": "lead_snp (lead_pip)"
                        },
                        {
                              "#": "n_snp"
                        },
                        {
                              "Searched SNP (PIP)": "snp (pip)"
                        }
                  ],
                  "cyper_for_intermediate_page": "SELECT * FROM QTL_DATA WHERE snp = '@snp@'",
                  "inter_error_title": "No QTL data found",
                  "inter_error_message": "No QTL records were found for this snp in our PanKbase dataset.",
                  "result_error_title": "Invalid link format",
                  "result_error_message": "The link you're using may be outdated or incorrectly formatted. Please verify the URL or contact us using the button below for assistance.",
                  "question_for_result": "How does the {SNP @snp_id@} influence the expression of {@gene_symbol@} in @tissue@ tissue, as reported by @method@?",
                  "rdb_query_for_result_page": "SELECT * FROM QTL_DATA WHERE snp = '@snp@' AND credible_set = '@credible_set_id@'",
                  "cypher_for_result_page_core": "MATCH (variant:sequence_variant:snp), (gene:coding_elements) WHERE ID(variant) = '@lead_snp@' AND ID(gene) = '@gene@' MATCH (variant)-[r:fine_mapped_eQTL]-(gene) WITH collect(DISTINCT variant) + collect(DISTINCT gene) AS nodes, collect(DISTINCT r) AS edges RETURN { results: [ { nodes: nodes, edges: edges } ] } AS output;",
                  "cypher_for_result_page_nbr": "MATCH (variant:sequence_variant:snp) WHERE ID(variant) = '@lead_snp@' MATCH (gene:coding_elements) WHERE ID(gene) = '@gene@' WITH variant, gene AS g OPTIONAL MATCH (variant)-[r0]-(nbr0) WITH variant, g, collect(DISTINCT {rel: r0, node: nbr0}) AS variant_related_pairs OPTIONAL MATCH (g)-[r1:effector_gene]-(nbr1) WITH variant, g, variant_related_pairs, collect(DISTINCT {rel: r1, node: nbr1}) AS effector_gene_pairs OPTIONAL MATCH (g)-[r2:regulation]->(nbr_g:gene) WITH variant, g, variant_related_pairs, effector_gene_pairs, collect(DISTINCT {rel: r2, node: nbr_g}) AS regulation_pairs_full OPTIONAL MATCH (g)-[r3:Differential_Expression]->(ct:cell_type) WITH variant, g, variant_related_pairs, effector_gene_pairs, regulation_pairs_full, collect(DISTINCT {rel: r3, node: ct}) AS differential_expression_pairs WITH variant, g, effector_gene_pairs, regulation_pairs_full[0..3] AS regulation_pairs_limited, variant_related_pairs, differential_expression_pairs WITH variant, g, variant_related_pairs + effector_gene_pairs + regulation_pairs_limited + differential_expression_pairs AS all_combined_pairs WITH variant, g, [pair IN all_combined_pairs WHERE pair.rel IS NOT NULL | pair.rel] AS all_rels, [pair IN all_combined_pairs WHERE pair.node IS NOT NULL | pair.node] AS all_nbrs WITH DISTINCT all_rels AS rels, [n IN all_nbrs WHERE ID(n) <> ID(g) AND ID(n) <> ID(variant)] AS nodes RETURN { results: [ { nodes: nodes, edges: rels } ] } AS output;",
                  "ai_question_for_result": [
                        "From the given JSON information, summarize the key characteristics and functions of the gene @gene_id@, including its involvement in immune regulation and associated pathways",
                        "Based on the JSON data, describe the relationship between the SNP @snp_id@ and the QTL of @gene_id@ in the pancreas, including details such as the effect allele, slope, posterior inclusion probability (PIP), and nominal p-value. If there is lead snp != @snp@, please also include the relationship between the lead snp and the gene.",
                        "Considering the input JSON, discuss the association between the gene @gene_id@ and Type 1 diabetes, including any evidence linking genetic variants to the disease"
                  ],
                  "ai_answer_sub_title": [
                        "Gene overview:",
                        "QTL overview:",
                        "Specific relation to Type 1 Diabetes:"
                  ],
                  "next_questions": [
                        {
                              "question": "Which {SNP} serves as the lead {QTL} for {@nbr_gene_symbol@}?",
                              "link": "/intermediate?sourceTerm=snp&relationship=QTL&targetTerm=gene@@nbr_gene_id@&targetSymbol=@nbr_gene_symbol@",
                              "query": "MATCH (variant:sequence_variant:snp)-[r:fine_mapped_eQTL]->(gene:coding_elements {id:'@nbr_gene_id@'}) WITH CASE WHEN r.data_source='GTEx; SusieR' THEN 'GTEx; SusieR' WHEN r.data_source='INSPIRE; SusieR' THEN 'INSPIRE; SusieR' WHEN r.data_source='splicing; GTEx' THEN 'splicing; GTEx' WHEN r.data_source='exon; INSPIRE' THEN 'exon; INSPIRE' ELSE 'Other' END AS data_source, r, variant WITH data_source, COLLECT({snp: id(variant), credible_set_id: r.credible_set, data_source: r.data_source, pip: r.pip, n_snp: r.n_snp, purity: r.purity, nominal_p: r.nominal_p, lbf: r.lbf, effect_allele: r.effect_allele}) AS credible_sets RETURN data_source, credible_sets ORDER BY data_source;"
                        }
                  ],
                  "resources_tabs": {
                        "references": {},
                        "empirical_evidence": {
                              "title": "Regional Fine-Mapping Plot",
                              "description": "This plot integrates multiple fine-mapping statistics (−log₁₀P, PIP, LBF) across a genomic region. The three-row scatter view condenses QTL evidence.\nRow 1 shows −log₁₀ P for classical association strength.\nRow 2 reports the posterior inclusion probability (PIP) from Bayesian fine-mapping.\nRow 3 displays the log Bayes factor (LBF) for complementary Bayes support.\nPoint colour encodes LD R² relative to the lead SNP (red dashed line), allowing you to gauge how neighbouring variants track the core signal.\nTogether these layers highlight candidate causal variants and their statistical weight at a glance.",
                              "legend": "View",
                              "lambda_function": "type_to_image",
                              "link_text": "Download the raw QTL data ↗"
                        },
                        "pankbase_links": [
                              [
                                    "QTL Data Source",
                                    "https://pankgraph.org/qtldatasource"
                              ],
                              [
                                    "QTL Pipeline",
                                    "https://pankgraph.org/pipeline"
                              ],
                              [
                                    "QTL Code",
                                    "https://github.com/PanKbase/PanKgraph-finemap-coloc"
                              ],
                              [
                                    "Integrated Cell Browser",
                                    "https://pankbase.org:8000/single-cell.html?PKBdatasetId=islet_of_Langerhans_scRNA_v1"
                              ]
                        ],
                        "external_links": [
                              [
                                    "Link to Ensembl: ",
                                    "View the gene @gene_symbol@ in Ensembl",
                                    "https://useast.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g=@gene_id@"
                              ]
                        ]
                  }
            }
      },
      "gene - express_in - cell_type": {
            "specific - relationship - general": {
                  "question": [
                        "How does {@gene_symbol@} expression change in T1D versus non-diabetic samples?"
                  ],
                  "inter_error_title": "No DEG data found",
                  "inter_error_message": "No DEG records were found for this gene in our PanKbase dataset.",
                  "result_error_title": "No DEG data found",
                  "result_error_message": "No DEG records were found for this gene in our PanKbase dataset.",
                  "question_for_result": "How does {@gene_symbol@} expression change in {@tissue_name@} in T1D vs non-diabetic samples?",
                  "cypher_for_result_page_core": "MATCH (g:gene {id: '@gene@'}) OPTIONAL MATCH (g)-[r4:Differential_Expression]->(ct:cell_type) OPTIONAL MATCH (g)-[r1:expression_level]->(ct) OPTIONAL MATCH (o:OCR)-[r2:OCR_locate_in]->(g) OPTIONAL MATCH (o)-[r3:OCR_activity]->(ct) WITH collect(DISTINCT g) AS g_nodes, collect(DISTINCT ct) AS ct_nodes, collect(DISTINCT o) AS o_nodes, collect(DISTINCT r4) AS r4_edges, collect(DISTINCT r1) AS r1_edges, collect(DISTINCT r2) AS r2_edges, collect(DISTINCT r3) AS r3_edges WITH g_nodes + ct_nodes + o_nodes AS nodes, r4_edges + r1_edges + r2_edges + r3_edges AS edges RETURN { results: [{ nodes: nodes, edges: edges }] } AS output;",
                  "cypher_for_result_page_nbr": "MATCH (g:gene) WHERE ID(g) = '@gene@' OPTIONAL MATCH (g)-[r1:effector_gene]-(nbr1) WITH g, collect(DISTINCT {rel: r1, node: nbr1}) AS effector_pairs OPTIONAL MATCH (g)-[r2:regulation]->(nbr_g:gene) WITH g, effector_pairs, collect(DISTINCT {rel: r2, node: nbr_g}) AS regulation_pairs_full WITH g, effector_pairs, regulation_pairs_full[0..3] AS regulation_pairs_limited WITH g, [pair IN effector_pairs WHERE pair.rel IS NOT NULL | pair.rel] + [pair IN regulation_pairs_limited WHERE pair.rel IS NOT NULL | pair.rel] AS all_rels, [pair IN effector_pairs WHERE pair.node IS NOT NULL | pair.node] + [pair IN regulation_pairs_limited WHERE pair.node IS NOT NULL | pair.node] AS all_nbrs WITH DISTINCT all_rels AS rels, [n IN all_nbrs WHERE ID(n) <> ID(g)] AS nodes RETURN { results: [ { nodes: nodes, edges: rels } ] } AS output;",
                  "ai_question_for_result": [
                        "Based on the JSON data, summarize the RNA differential expression and absolute expression of @gene_id@ in T1D versus non-diabetic samples. Report: adjusted p-value (significant if < 0.05, if p-value is < 0.001 or 0, just says it is  < 0.001. Don't say p value = 0 as it is inaccurate ), log₂ fold-change (|log₂FC| > 1 is very significant but all result are DEG, so don't be too strict about FDR as it is scRNAseq), and median expression in each condition. Next, add an ATAC-seq gene-activity overview: note that scores were derived with Signac GeneActivity() (promoter ±2 kb + gene body) and aggregated by cell type. Compare mean/median activity between T1D and non-diabetic groups, indicate whether the direction and magnitude match the RNA results, and flag any discordance.",
                        "Evaluate evidence linking gene @gene_id@ to Type 1 Diabetes (T1D), highlighting any associated expression data."
                  ],
                  "ai_answer_sub_title": [
                        "Differential expression state overview: ",
                        "Specific relation to Type 1 Diabetes:"
                  ],
                  "next_questions": [
                        {
                              "question": "Which {SNP} serves as the lead {QTL} for {@nbr_gene_symbol@}?",
                              "link": "/intermediate?sourceTerm=snp&relationship=QTL&targetTerm=gene@@nbr_gene_id@&targetSymbol=@nbr_gene_symbol@",
                              "query": "MATCH (variant:sequence_variant:snp)-[r:fine_mapped_eQTL]->(gene:coding_elements {id:'@nbr_gene_id@'}) WITH CASE WHEN r.data_source='GTEx; SusieR' THEN 'GTEx; SusieR' WHEN r.data_source='INSPIRE; SusieR' THEN 'INSPIRE; SusieR' WHEN r.data_source='splicing; GTEx' THEN 'splicing; GTEx' WHEN r.data_source='exon; INSPIRE' THEN 'exon; INSPIRE' ELSE 'Other' END AS data_source, r, variant WITH data_source, COLLECT({snp: id(variant), credible_set_id: r.credible_set, data_source: r.data_source, pip: r.pip, n_snp: r.n_snp, purity: r.purity, nominal_p: r.nominal_p, lbf: r.lbf, effect_allele: r.effect_allele}) AS credible_sets RETURN data_source, credible_sets ORDER BY data_source;"
                        }
                  ],
                  "resources_tabs": {
                        "references": {},
                        "empirical_evidence": {
                              "title": "Expression Distribution: Violin Plot",
                              "description": "The violin plot displays the distribution of normalized gene expression across various pancreatic cell types, including Ductal, Active Stellate, Alpha, Acinar, MUC5B+ Ductal, Beta, Endothelial, Gamma + Epsilon, Delta, Immune, Quiescent Stellate, and Cycling Alpha. Each violin shape represents the density of expression values within a cell type, with wider sections indicating higher frequencies. Boxplots within the violins show the median and interquartile range.",
                              "legend": "Example",
                              "link": "https://pankbase.org:8000/single-cell.html?datasetId=islet_of_Langerhans_scRNA_v3-3&gene=@gene_symbol@",
                              "link_text": "Visit Pankbase to explore violin plots ↗"
                        },
                        "pankbase_links": [
                              [
                                    "snATAC Data Source",
                                    "https://data.pankbase.org/analysis-sets/PKBDS0470WCHR/"
                              ],
                              [
                                    "snATAC Pipeline",
                                    "https://hugeampkpncms.org/sites/default/files/images/pankbase/pipelines/snATACprocessingpipeline_parul_pankbase.pdf"
                              ],
                              [
                                    "snATAC Code",
                                    "https://github.com/PanKbase/HPAP-scATAC-seq/blob/main/clustering_notebooks/query_snatac.ipynb"
                              ],
                              [
                                    "scRNAseq Data Source",
                                    "https://data.pankbase.org/analysis-sets/PKBDS1349YHGQ/"
                              ],
                              [
                                    "scRNAseq Pipeline",
                                    "https://pank-s3-to-share.s3.us-east-1.amazonaws.com/docs/expression_pipeline.pdf"
                              ],
                              [
                                    "scRNAseq Code",
                                    "https://github.com/PanKbase/PanKbase-scRNA-seq"
                              ],
                              [
                                    "DEG Pipeline",
                                    "https://pank-s3-to-share.s3.us-east-1.amazonaws.com/docs/deg_pipeline.pdf"
                              ],
                              [
                                    "DEG Code",
                                    "https://github.com/PanKbase/PanKbase-DEG-analysis"
                              ]
                        ],
                        "external_links": [
                              [
                                    "Link to Ensembl: ",
                                    "View the gene @gene_symbol@ in Ensembl",
                                    "https://useast.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g=@gene_id@"
                              ]
                        ]
                  }
            }
      }
}
